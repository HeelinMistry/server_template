#!/usr/bin/env node

const app = require('../app');
const http = require('http');

const port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

const server = http.createServer(app);

server.listen(port, () => {
    console.log(`ðŸš€ API Server running at http://localhost:${port}`);
});
server.on('error', onError);

function normalizePort(val) {
    const portNum = parseInt(val, 10);
    if (isNaN(portNum)) return val;
    if (portNum >= 0) return portNum;
    return false;
}

function onError(error) {
    if (error.syscall !== 'listen') throw error;
    const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
        default:
            throw error;
    }
}
